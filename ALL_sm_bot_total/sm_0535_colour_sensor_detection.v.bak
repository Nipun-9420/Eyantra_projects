module sm_0535_colour_sensor_detection(
	input clk,
	input color_input,
	output S0,
	output S1,
	output S2,
	output S3,
	output [2:0] color,
	output led_R,
	output led_G,
	output led_B,
	
	output [11:0] color_out_freq
); 
   
	reg [7:0] r_color_freq;
	reg [6:0] clk_counter = 0;
	reg [7:0] cf_counter = 0;
	
	reg [7:0] freq_out [7:0];
	
	reg [11:0] freq_tot;
	reg [11:0] freq_avg = 15;	
	
	reg [2:0] freq_no;
	
	integer i;
	
	
	//selecting 100 % frequency
	assign S0 = 1;
	assign S1 = 0;
	
	// selecting clear filter
	assign S2 = 1;
	assign S3 = 0;
	
	// assigning correct color to initiate msg
	assign color[2] =  ((r_color_freq == 9) | (r_color_freq == 18)) ? 1:0 ;      // red color
	assign color[1] =  ((r_color_freq == 4) | (r_color_freq == 5)) ? 1:0 ;     // blue color
	assign color[0] =  ((r_color_freq == 8) | (r_color_freq == 16)) ? 1:0 ;    // green color
	
	// to glow led
	assign led_R =  ((r_color_freq == 9) | (r_color_freq == 18)) ? 0:1; // red LED
	assign led_B =  ((r_color_freq == 4) | (r_color_freq == 5)) ? 0:1; // blue LED
	assign led_G =  ((r_color_freq == 8) | (r_color_freq == 16)) ? 0:1 ;  // green LED
	
	assign color_out_freq = freq_avg;
	
	always@(posedge clk) 
	begin
		if (clk_counter < 10)
		begin
			clk_counter = clk_counter + 1;
		end
		else 
		begin

			if (freq_no == 3'b111)
			begin
				freq_out[freq_no] = cf_counter;
				
				//for ( i = 0 ; i > 7 ; i = i + 1)
				//begin
					//freq_tot = freq_tot + freq_out[i];
				//end
				
				freq_tot = freq_out[0] + freq_out[1] + freq_out[2] + freq_out[3] + freq_out[4] + freq_out[5] + freq_out[6] + freq_out[7] ;
				
				freq_avg = freq_tot >> 3;
				freq_no = 0;
			end
			
			else 
			begin
				freq_out[freq_no] = cf_counter;
				freq_no = freq_no + 1;
			end
			
			clk_counter = 0;
		end

	end	
	
	always@(posedge color_input)
	begin
		if (clk_counter == 0)
		begin
			cf_counter = 0;
		end
		else
		begin
			cf_counter = cf_counter + 1;
		end
	end
	
endmodule 